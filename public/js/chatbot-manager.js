class ChatbotManager {
    constructor() {
        this.setupEventListeners();
    }

    setupEventListeners() {
        // Ensure listeners are only added once
        if (this.initialized) return;
        this.initialized = true;

        const chatInput = document.getElementById('chatInput');
        const askButton = document.getElementById('askButton');
        
        if (askButton) {
            console.log('Adding click listener to ask button');
            askButton.addEventListener('click', () => this.askQuestion());
        } else {
            console.warn('Ask button not found');
        }

        if (chatInput) {
            console.log('Adding keypress listener to chat input');
            chatInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    this.askQuestion();
                }
            });
        } else {
            console.warn('Chat input not found');
        }
    }

    async askQuestion(useGrok = false) {
        console.log('askQuestion called, useGrok:', useGrok);
        const chatInput = document.getElementById('chatInput');
        const chatResponse = document.getElementById('chatResponse');
        
        if (!chatInput || !chatResponse) {
            console.error('Chat elements not found:', { chatInput, chatResponse });
            return;
        }
        
        const question = chatInput.value.trim();
        if (!question) {
            console.warn('Empty question, not sending request');
            return;
        }

        console.log('Sending chat request:', { question, useGrok });
        chatResponse.innerHTML = '<div class="text-center"><div class="spinner-border text-primary" role="status"></div></div>';

        try {
            const response = await fetch('/chat', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ question, useGrok })
            });

            if (!response.ok) throw new Error('Failed to get response');
            
            const data = await response.json();
            console.log('Chat response:', data);
            
            if (data.askForGrok) {
                chatResponse.innerHTML = `
                    <div class="alert alert-info">
                        <p>${data.message}</p>
                        <button class="btn btn-primary mt-2" id="askGrokBtn">
                            Yes, ask Grok
                        </button>
                    </div>
                `;
                // Add click handler to the newly created button
                document.getElementById('askGrokBtn').addEventListener('click', () => {
                    this.askQuestion(true);
                });
            } else if (data.match) {
                let sourceInfo = data.source === "database" ? 
                    `<small class="text-muted">(From database${data.similarity ? ` - ${data.similarity} match` : ''})</small>` : 
                    '<small class="text-muted">(Generated by Grok)</small>';
                
                chatResponse.innerHTML = `
                    <div class="answer-container">
                        <p class="answer">${data.match.answer}</p>
                        <p class="source">${sourceInfo}</p>
                    </div>
                `;
            } else {
                chatResponse.innerHTML = `
                    <div class="alert alert-warning">
                        ${data.message || 'No answer available.'}
                    </div>
                `;
            }
        } catch (error) {
            console.error('Chat error:', error);
            chatResponse.innerHTML = `
                <div class="alert alert-danger">
                    Error: Could not get an answer. Please try again.
                </div>
            `;
        }
    }
}
